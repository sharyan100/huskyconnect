{"ast":null,"code":"var _jsxFileName = \"/Users/xvijer/info442/huskyconnect/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBDzyjFk8OirTT_tg84XW6Czbit4i2Fizk\",\n  authDomain: \"huskyconnect-807a6.firebaseapp.com\",\n  databaseURL: \"https://huskyconnect-807a6-default-rtdb.firebaseio.com\",\n  projectId: \"huskyconnect-807a6\",\n  storageBucket: \"huskyconnect-807a6.appspot.com\",\n  messagingSenderId: \"58371412457\",\n  appId: \"1:58371412457:web:e42a58f3f8e61851a73b78\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","BrowserRouter","initializeApp","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/xvijer/info442/huskyconnect/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBDzyjFk8OirTT_tg84XW6Czbit4i2Fizk\",\n  authDomain: \"huskyconnect-807a6.firebaseapp.com\",\n  databaseURL: \"https://huskyconnect-807a6-default-rtdb.firebaseio.com\",\n  projectId: \"huskyconnect-807a6\",\n  storageBucket: \"huskyconnect-807a6.appspot.com\",\n  messagingSenderId: \"58371412457\",\n  appId: \"1:58371412457:web:e42a58f3f8e61851a73b78\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AACA,SAASC,aAAa,QAAQ,cAAc;AAC5C;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,oCAAoC;EAChDC,WAAW,EAAE,wDAAwD;EACrEC,SAAS,EAAE,oBAAoB;EAC/BC,aAAa,EAAE,gCAAgC;EAC/CC,iBAAiB,EAAE,aAAa;EAChCC,KAAK,EAAE;AACT,CAAC;;AAED;AACAV,aAAa,CAACG,cAAc,CAAC;AAE7B,MAAMQ,IAAI,GAAGd,QAAQ,CAACe,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTb,OAAA,CAACN,KAAK,CAACoB,UAAU;EAAAC,QAAA,eACff,OAAA,CAACH,aAAa;IAAAkB,QAAA,eACVf,OAAA,CAACJ,GAAG;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}